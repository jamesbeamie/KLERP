{"version":3,"sources":["assets/shape-16.svg","assets/kerplogo.png","components/landingpage/Input.js","components/landingpage/Sidebar.js","components/landingpage/Main.js","components/landingpage/LandingPage.js","components/common/Header.js","components/farmerDashboard/Fields.js","components/farmerDashboard/Requests.js","components/farmerDashboard/Accounts.js","components/farmerDashboard/DashBoard.js","components/App.js","serviceWorker.js","index.js"],"names":["StyledInput","styled","input","Container","div","Status","Input","props","useState","value","setValue","placeholder","type","required","autocomplete","onChange","event","target","name","handleChange","Terms","p","Form","form","LogoWrapper","Sidebar","userdata","setUserdata","farmerid","farmerpwd","history","useHistory","prev","src","logo","alt","style","width","onClick","farmernumber","password","console","log","localStorage","setItem","push","Main","Wrapper","bgImg","LandingPage","Header","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Fields","Fragment","Table","striped","bordered","hover","responsive","Requests","Accounts","colSpan","FarmerDashBoard","component","setComponent","class","aria-hidden","backgroundColor","App","loggedin","getItem","path","exact","from","to","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"gRAAe,MAA0B,qC,uBCA1B,MAA0B,qC,m2BCGzC,IAsBMA,EAAcC,IAAOC,MAAV,KAkBXC,EAAYF,IAAOG,IAAV,KAMTC,EAASJ,IAAOG,IAAV,IAORJ,EAGAA,EAGAA,GAKWM,EAhED,SAACC,GAAW,IAAD,EACGC,mBAAS,IADZ,mBAChBC,EADgB,KACTC,EADS,KAMvB,OACE,eAACP,EAAD,WACE,cAACH,EAAD,CACEW,YAAaJ,EAAMI,aAAeJ,EAAMI,YACxCC,KAAML,EAAMK,KAAOL,EAAMK,KAAO,OAChCC,UAAQ,EACRC,aAAa,MACbC,SAAU,SAACC,GAAD,OAXK,SAACA,GACpBN,EAASM,EAAMC,OAAOR,OACtBF,EAAMQ,SAASC,EAAMC,OAAOC,KAAMF,EAAMC,OAAOR,OAStBU,CAAaH,IAClCE,KAAMX,EAAMW,KACZT,MAAOF,EAAME,MAAQF,EAAME,MAAQA,IAErC,cAACJ,EAAD,Q,wnDCdN,IA4DMe,EAAQnB,IAAOoB,EAAV,KAQLC,EAAOrB,IAAOsB,KAAV,KA+BJC,EAAcvB,IAAOG,IAAV,KAkBXD,EAAYF,IAAOG,IAAV,KA8BAqB,EAnJC,WAAO,IAAD,EACYjB,mBAAS,IADrB,mBACbkB,EADa,KACHC,EADG,OAEYnB,mBAAS,MAFrB,mBAEboB,EAFa,aAGcpB,mBAAS,WAHvB,mBAGbqB,EAHa,KAKhBC,GALgB,KAKNC,eACRZ,EAAe,SAACD,EAAMT,GAC1BkB,GAAY,SAACK,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBd,EAAOT,QAc5C,OACE,eAAC,EAAD,WACE,cAACe,EAAD,UACE,qBAAKS,IAAKC,EAAMC,IAAI,GAAGC,MAAO,CAAEC,MAAO,WAEzC,eAACf,EAAD,WACE,yCACA,cAAC,EAAD,CACEX,YAAY,gBACZO,KAAK,eACLH,SAAUI,IAEZ,cAAC,EAAD,CACEP,KAAK,QACLD,YAAY,QACZO,KAAK,QACLH,SAAUI,IAEZ,cAAC,EAAD,CACEP,KAAK,WACLD,YAAY,WACZO,KAAK,WACLH,SAAUI,IAEZ,wBAAQmB,QAnCO,WAGfZ,EAASa,cAAgBX,GAAYF,EAASc,UAAYX,GAC5DY,QAAQC,IAAI,WACZC,aAAaC,QAAQ,YAAalB,EAASc,UAC3CV,EAAQe,KAAK,sBAEbJ,QAAQC,IAAI,iBA2BV,wBAEF,gCACE,eAACtB,EAAD,gEACoD,uBADpD,2BAIA,mDACmB,qD,+TCxD3B,IAWMjB,EAAYF,IAAOG,IAAV,KAkBA0C,EA7BF,WACX,OACE,cAAC,EAAD,UACE,8CACc,uBADd,e,6ZCCN,IAWM3C,EAAYF,IAAOG,IAAV,KAQT2C,EAAU9C,IAAOG,IAAV,IACa4C,GASXC,EA7BK,WAClB,OACE,cAAC,EAAD,UACE,eAACF,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,U,gBC2BOG,EA3BA,WACb,OACE,eAACC,EAAA,EAAD,CAAQC,OAAO,KAAf,UACE,cAACD,EAAA,EAAOE,MAAR,CAAcC,KAAK,IAAnB,SACE,qBAAKrB,IAAKC,EAAMC,IAAI,GAAGC,MAAO,CAAEC,MAAO,WAEzC,cAACc,EAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7B,cAACL,EAAA,EAAOM,SAAR,CAAiBC,GAAG,mBAApB,SACE,eAACC,EAAA,EAAD,CAAKC,UAAU,WAAf,UACE,cAACD,EAAA,EAAIE,KAAL,CAAUD,UAAU,aAAaN,KAAK,QAAtC,sBAGA,cAACK,EAAA,EAAIE,KAAL,CAAUD,UAAU,aAAaN,KAAK,QAAtC,wBAGA,cAACK,EAAA,EAAIE,KAAL,CAAUD,UAAU,aAAaN,KAAK,QAAtC,uBAGA,cAACK,EAAA,EAAIE,KAAL,CAAUD,UAAU,aAAaN,KAAK,QAAtC,gC,gBCkEKQ,EA7FA,WAAO,IAAD,EACnB,OACE,cAAC,IAAMC,SAAP,UACE,eAACC,EAAA,GAAD,GACEC,SAAO,EACPC,UAAQ,EACRC,OAAK,EACLC,WAAW,MAJb,2BAKa,MALb,2BAMa,MANb,2BAOa,MAPb,0BASE,gCACE,+BACE,0CACA,0CACA,+CACA,6CACA,4CACA,qDAGJ,kCACE,+BACE,mCACA,2CACA,mCACA,wCACA,4CACA,sCAEF,+BACE,mCACA,yCACA,oCACA,yCACA,yCACA,sCAEF,+BACE,mCACA,0CACA,mCACA,wCACA,yCACA,sCAEF,+BACE,mCACA,yCACA,oCACA,yCACA,yCACA,sCAEF,+BACE,mCACA,2CACA,mCACA,wCACA,4CACA,sCAEF,+BACE,mCACA,yCACA,oCACA,yCACA,yCACA,sCAEF,+BACE,mCACA,2CACA,mCACA,wCACA,4CACA,sCAEF,+BACE,mCACA,yCACA,oCACA,yCACA,yCACA,2CAlFN,OC0GSC,EA5GE,WAAO,IAAD,EACrB,OACE,cAAC,IAAMN,SAAP,UACE,eAACC,EAAA,GAAD,GACEC,SAAO,EACPC,UAAQ,EACRC,OAAK,EACLC,WAAW,MAJb,2BAKa,MALb,2BAMa,MANb,2BAOa,MAPb,0BASE,gCACE,+BACE,sCACA,0CACA,yCAEA,4CACA,wCACA,oDAGJ,kCACE,+BACE,0CACA,4CACA,yCACA,0CACA,sCACA,sCAEF,+BACE,0CACA,gDACA,wCACA,0CACA,sCACA,sCAEF,+BACE,0CACA,8CACA,wCACA,2CACA,yCACA,sCAEF,+BACE,0CACA,4CACA,yCACA,0CACA,yCACA,sCAEF,+BACE,0CACA,gDACA,wCACA,0CACA,sCACA,sCAEF,+BACE,0CACA,8CACA,wCACA,2CACA,yCACA,sCAEF,+BACE,0CACA,4CACA,yCACA,0CACA,sCACA,sCAEF,+BACE,0CACA,gDACA,wCACA,0CACA,yCACA,sCAEF,+BACE,0CACA,8CACA,wCACA,2CACA,yCACA,2CA3FN,OCmGSE,EAtGE,WAAO,IAAD,EACrB,OACE,cAAC,IAAMP,SAAP,UACE,eAACC,EAAA,GAAD,GACEC,SAAO,EACPC,UAAQ,EACRC,OAAK,EACLC,WAAW,MAJb,2BAKa,MALb,2BAMa,MANb,2BAOa,MAPb,0BASE,kCACE,+BAEE,oBAAIG,QAAQ,IAAZ,mBACA,oBAAIA,QAAQ,IAAZ,4BAEF,+BACE,sCACA,8CACA,8CAEA,sCACA,4CACA,oDAGJ,kCACE,+BACE,0CACA,yCACA,0CACA,0CACA,4CACA,8CAEF,+BACE,0CACA,yCACA,0CACA,0CACA,4CACA,+CAEF,+BACE,0CACA,yCACA,0CACA,0CACA,2CACA,+CAEF,+BACE,0CACA,yCACA,0CACA,0CACA,2CACA,+CAEF,+BACE,0CACA,yCACA,0CACA,0CACA,4CACA,8CAEF,+BACE,0CACA,yCACA,0CACA,0CACA,2CACA,+CAEF,+BACE,0CACA,yCACA,0CACA,0CACA,2CACA,+CAGF,+BACE,oBAAIA,QAAQ,IAAZ,8BACA,8CACA,oBAAIA,QAAQ,IAAZ,mCACA,+CAEF,+BACE,oBAAIA,QAAQ,IAAZ,yDACA,oBAAIA,QAAQ,IAAZ,+BA3FN,O,iBCkGSC,EAjGS,WAAM,MAEMhE,mBAAS,GAFf,mBAErBiE,EAFqB,KAEVC,EAFU,KAG5B,OACE,eAAC,IAAMX,SAAP,WACE,cAAC,EAAD,IAEA,qBAAKH,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAMF,GAAG,UAAxB,UACE,qBAAKE,UAAU,2BAAf,SACE,qBAAKA,UAAU,6BAAf,SACE,sBAAKA,UAAU,+BAAf,UACE,sBAAKA,UAAU,4DAAf,UACE,mBAAGe,MAAM,2BAA2BC,cAAY,SAChD,mBACEtB,KAAK,IACLM,UAAU,+CAFZ,oBAMA,mBAAGA,UAAU,2BAAb,mCAEF,sBAAKA,UAAU,sBAAf,UAaE,mBACEN,KAAK,UACLhB,QAAS,kBAAMoC,EAAa,IAC5Bd,UACe,GAAba,EACI,4EACA,oEANR,oBAYA,mBACEnB,KAAK,YACLhB,QAAS,kBAAMoC,EAAa,IAC5Bd,UACe,GAAba,EACI,4EACA,oEANR,sBAYA,mBACEnB,KAAK,WACLhB,QAAS,kBAAMoC,EAAa,IAC5Bd,UACe,GAAba,EACI,4EACA,oEANR,gCAgBR,qBACEb,UAAU,4BACVxB,MAAO,CAAEyC,gBAAiB,WAF5B,SAIgB,GAAbJ,EACC,cAAC,IAAD,IACe,GAAbA,EACF,cAAC,EAAD,IACe,GAAbA,EACF,cAAC,EAAD,IACe,GAAbA,EACF,cAAC,EAAD,IAEA,cAAC,EAAD,eCvECK,EAdH,WACV,IAAMC,EAAWpC,aAAaqC,QAAQ,aAEtC,OADAvC,QAAQC,IAAIqC,GAEV,cAAC,IAAD,UACE,eAAC,IAAD,YACIA,GAAY,cAAC,IAAD,CAAOE,KAAK,IAAIR,UAAWxB,EAAaiC,OAAK,IAC3D,cAAC,IAAD,CAAOD,KAAK,oBAAoBR,UAAWD,IAC1CO,GAAY,cAAC,IAAD,CAAUI,KAAK,IAAIC,GAAG,oBAAoBF,OAAK,UCPhDG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7D,QAAQ6D,MAAMA,EAAMC,c","file":"static/js/main.83c29bc3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/shape-16.2d58df57.svg\";","export default __webpack_public_path__ + \"static/media/kerplogo.51a79d56.png\";","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Input = (props) => {\n  const [value, setValue] = useState(\"\");\n  const handleChange = (event) => {\n    setValue(event.target.value);\n    props.onChange(event.target.name, event.target.value);\n  };\n  return (\n    <Container>\n      <StyledInput\n        placeholder={props.placeholder && props.placeholder}\n        type={props.type ? props.type : \"text\"}\n        required\n        autocomplete='off'\n        onChange={(event) => handleChange(event)}\n        name={props.name}\n        value={props.value ? props.value : value}\n      />\n      <Status />\n    </Container>\n  );\n};\n\nconst StyledInput = styled.input`\n  width: 80%;\n  max-width: 350px;\n  min-width: 250px;\n  height: 40px;\n  border: none;\n  margin: 0.5rem 0;\n  background-color: #f5f5f5;\n  box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\n  border-radius: 8px;\n  padding: 0 1rem;\n  transition: all 0.2s ease-in;\n\n  &:hover {\n    transform: translateY(-3px);\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Status = styled.div`\n  height: 10px;\n  width: 10px;\n  background: #9d9d9d;\n  border-radius: 10px;\n  margin-left: 1rem;\n\n  ${StyledInput}:focus + & {\n    background: #ffa689;\n  }\n  ${StyledInput}:invalid + & {\n    background: #fe2f75;\n  }\n  ${StyledInput}:valid + & {\n    background: #70edb9;\n  }\n`;\n\nexport default Input;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport logo from \"../../assets/kerplogo.png\";\nimport Input from \"./Input\";\n\nconst Sidebar = () => {\n  const [userdata, setUserdata] = useState({});\n  const [farmerid, setFarmerid] = useState(2005);\n  const [farmerpwd, setFarmerpwd] = useState(\"simiyu\");\n\n  let history = useHistory();\n  const handleChange = (name, value) => {\n    setUserdata((prev) => ({ ...prev, [name]: value }));\n  };\n  // console.log(\"userdata\", userdata);\n  const handleSubmit = () => {\n    // e.preventDefault();\n    // console.log(\"userdata ndani\", userdata);\n    if (userdata.farmernumber == farmerid && userdata.password == farmerpwd) {\n      console.log(\"ikooooo\");\n      localStorage.setItem(\"farmerpwd\", userdata.password);\n      history.push(\"/farmer/dashboard\");\n    } else {\n      console.log(\"ikooooo wapi\");\n    }\n  };\n  return (\n    <Container>\n      <LogoWrapper>\n        <img src={logo} alt='' style={{ width: \"80%\" }} />\n      </LogoWrapper>\n      <Form>\n        <h3>Welcome</h3>\n        <Input\n          placeholder='Farmer number'\n          name='farmernumber'\n          onChange={handleChange}\n        />\n        <Input\n          type='email'\n          placeholder='Email'\n          name='email'\n          onChange={handleChange}\n        />\n        <Input\n          type='password'\n          placeholder='Password'\n          name='password'\n          onChange={handleChange}\n        />\n        <button onClick={handleSubmit}>Sign In</button>\n      </Form>\n      <div>\n        <Terms>\n          By using kilimoERP, I agree to the Privacy Policy <br /> and Terms of\n          Service\n        </Terms>\n        <h4>\n          Forgot password? <span>Restore</span>\n        </h4>\n      </div>\n    </Container>\n  );\n};\n\nconst Terms = styled.p`\n  padding: 0 1rem;\n  text-align: center;\n  font-size: 10px;\n  color: #808080;\n  font-weight: 300;\n`;\n\nconst Form = styled.form`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  h3 {\n    color: #666666;\n    margin-bottom: 2rem;\n  }\n\n  button {\n    width: 75%;\n    max-width: 350px;\n    min-width: 250px;\n    height: 40px;\n    border: none;\n    margin: 1rem 0;\n    box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\n    border-radius: 8px;\n    background-color: #72c66c;\n    color: #fff;\n    font-weight: 600;\n    cursor: pointer;\n    transition: all 0.2s ease-in;\n\n    &:hover {\n      transform: translateY(-3px);\n    }\n  }\n`;\n\nconst LogoWrapper = styled.div`\n  img {\n    height: 6rem;\n  }\n\n  h3 {\n    color: #ff8d8d;\n    text-align: center;\n    font-size: 22px;\n  }\n\n  span {\n    color: #5dc399;\n    font-weight: 300;\n    font-size: 18px;\n  }\n`;\n\nconst Container = styled.div`\n  min-width: 400px;\n  backdrop-filter: blur(35px);\n  background-color: rgba(255, 255, 255, 0.8);\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  padding: 0 2rem;\n\n  @media (max-width: 900px) {\n    width: 100vw;\n    position: absolute;\n    padding: 0;\n  }\n\n  h4 {\n    color: #808080;\n    font-weight: bold;\n    font-size: 13px;\n    margin-top: 2rem;\n\n    span {\n      color: #ff8d8d;\n      cursor: pointer;\n    }\n  }\n`;\n\nexport default Sidebar;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Main = () => {\n  return (\n    <Container>\n      <h1>\n        The Farmers <br />\n        Choice\n      </h1>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  h1 {\n    font-size: 45px;\n    font-weight: 400;\n    color: #343434;\n\n    @media (max-width: 900px) {\n      display: none;\n    }\n  }\n`;\n\nexport default Main;\n","import React from \"react\";\nimport styled from \"styled-components\";\n// import bgImg from \"../assets/shape-16.svg\";\nimport bgImg from \"../../assets/shape-16.svg\";\nimport Sidebar from \"./Sidebar\";\nimport Main from \"./Main\";\n\nconst LandingPage = () => {\n  return (\n    <Container>\n      <Wrapper>\n        <Sidebar />\n        <Main />\n      </Wrapper>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  background: #eefcff;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n`;\nconst Wrapper = styled.div`\n  background-image: url(${bgImg});\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  width: 100%;\n  height: 100%;\n  display: flex;\n`;\n\nexport default LandingPage;\n","import React from \"react\";\nimport {\n  Navbar,\n  Nav,\n  NavDropdown,\n  Form,\n  FormControl,\n  Button,\n} from \"react-bootstrap\";\n\nimport logo from \"../../assets/kerplogo.png\";\n\nconst Header = () => {\n  return (\n    <Navbar expand='lg'>\n      <Navbar.Brand href='/'>\n        <img src={logo} alt='' style={{ width: \"50%\" }} />\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav'>\n        <Nav className='ml-auto '>\n          <Nav.Link className='headerlink' href='#home'>\n            Agronomy\n          </Nav.Link>\n          <Nav.Link className='headerlink' href='#link'>\n            Harvesting\n          </Nav.Link>\n          <Nav.Link className='headerlink' href='#link'>\n            Transport\n          </Nav.Link>\n          <Nav.Link className='headerlink' href='#link'>\n            Husbandry\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\n\nconst Fields = () => {\n  return (\n    <React.Fragment>\n      <Table\n        striped\n        bordered\n        hover\n        responsive='sm'\n        responsive='md'\n        responsive='lg'\n        responsive='xl'\n      >\n        <thead>\n          <tr>\n            <th>Field ID</th>\n            <th>Location</th>\n            <th>Size in acres</th>\n            <th>Field agent</th>\n            <th>Cane phase</th>\n            <th>planting cycle</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>1</td>\n            <td>Kamukuywa</td>\n            <td>7</td>\n            <td>Katasi</td>\n            <td>Harvesting</td>\n            <td>1</td>\n          </tr>\n          <tr>\n            <td>2</td>\n            <td>Bungoma</td>\n            <td>10</td>\n            <td>Naliaka</td>\n            <td>thining</td>\n            <td>4</td>\n          </tr>\n          <tr>\n            <td>3</td>\n            <td>Sikhendu</td>\n            <td>5</td>\n            <td>Mulati</td>\n            <td>weeding</td>\n            <td>2</td>\n          </tr>\n          <tr>\n            <td>4</td>\n            <td>Bungoma</td>\n            <td>10</td>\n            <td>Naliaka</td>\n            <td>thining</td>\n            <td>4</td>\n          </tr>\n          <tr>\n            <td>5</td>\n            <td>Kamukuywa</td>\n            <td>7</td>\n            <td>Katasi</td>\n            <td>Harvesting</td>\n            <td>1</td>\n          </tr>\n          <tr>\n            <td>6</td>\n            <td>Bungoma</td>\n            <td>10</td>\n            <td>Naliaka</td>\n            <td>thining</td>\n            <td>4</td>\n          </tr>\n          <tr>\n            <td>5</td>\n            <td>Kamukuywa</td>\n            <td>7</td>\n            <td>Katasi</td>\n            <td>Harvesting</td>\n            <td>1</td>\n          </tr>\n          <tr>\n            <td>6</td>\n            <td>Bungoma</td>\n            <td>10</td>\n            <td>Naliaka</td>\n            <td>thining</td>\n            <td>4</td>\n          </tr>\n        </tbody>\n      </Table>\n    </React.Fragment>\n  );\n};\n\nexport default Fields;\n","import React from \"react\";\n\nimport { Table } from \"react-bootstrap\";\n\nconst Requests = () => {\n  return (\n    <React.Fragment>\n      <Table\n        striped\n        bordered\n        hover\n        responsive='sm'\n        responsive='md'\n        responsive='lg'\n        responsive='xl'\n      >\n        <thead>\n          <tr>\n            <th>date</th>\n            <th> request</th>\n            <th> nature</th>\n\n            <th>department</th>\n            <th>status</th>\n            <th> field number</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>2/5/2020</td>\n            <td>Fertilizer</td>\n            <td>advance</td>\n            <td>Agronomy</td>\n            <td>done</td>\n            <td>7</td>\n          </tr>\n          <tr>\n            <td>2/5/2020</td>\n            <td>Soil PH tester</td>\n            <td>Urgent</td>\n            <td>Agronomy</td>\n            <td>done</td>\n            <td>2</td>\n          </tr>\n          <tr>\n            <td>2/5/2020</td>\n            <td>Truck rescue</td>\n            <td>urgent</td>\n            <td>Transport</td>\n            <td>Pending</td>\n            <td>2</td>\n          </tr>\n          <tr>\n            <td>2/5/2020</td>\n            <td>Fertilizer</td>\n            <td>advance</td>\n            <td>Agronomy</td>\n            <td>Pending</td>\n            <td>7</td>\n          </tr>\n          <tr>\n            <td>2/5/2020</td>\n            <td>Soil PH tester</td>\n            <td>Urgent</td>\n            <td>Agronomy</td>\n            <td>done</td>\n            <td>2</td>\n          </tr>\n          <tr>\n            <td>2/5/2020</td>\n            <td>Truck rescue</td>\n            <td>urgent</td>\n            <td>Transport</td>\n            <td>Pending</td>\n            <td>2</td>\n          </tr>\n          <tr>\n            <td>2/5/2020</td>\n            <td>Fertilizer</td>\n            <td>advance</td>\n            <td>Agronomy</td>\n            <td>done</td>\n            <td>7</td>\n          </tr>\n          <tr>\n            <td>2/5/2020</td>\n            <td>Soil PH tester</td>\n            <td>Urgent</td>\n            <td>Agronomy</td>\n            <td>Pending</td>\n            <td>2</td>\n          </tr>\n          <tr>\n            <td>2/5/2020</td>\n            <td>Truck rescue</td>\n            <td>urgent</td>\n            <td>Transport</td>\n            <td>Pending</td>\n            <td>2</td>\n          </tr>\n\n          {/* <tr>\n                <td>3</td>\n                <td colSpan='2'>Larry the Bird</td>\n                <td>@twitter</td>\n              </tr> */}\n        </tbody>\n      </Table>\n    </React.Fragment>\n  );\n};\n\nexport default Requests;\n","import React from \"react\";\n\nimport { Table } from \"react-bootstrap\";\n\nconst Accounts = () => {\n  return (\n    <React.Fragment>\n      <Table\n        striped\n        bordered\n        hover\n        responsive='sm'\n        responsive='md'\n        responsive='lg'\n        responsive='xl'\n      >\n        <thead>\n          <tr>\n            {/* <th colSpan='2'>Debit</th> */}\n            <th colSpan='3'>Debit</th>\n            <th colSpan='3'> Deductions</th>\n          </tr>\n          <tr>\n            <th>date</th>\n            <th> transaction</th>\n            <th> amount(ksh)</th>\n\n            <th>date</th>\n            <th> deduction</th>\n            <th> amount(ksh)</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>2/5/2020</td>\n            <td>payment</td>\n            <th>80000.00</th>\n            <td>2/5/2020</td>\n            <td>fertilizer</td>\n            <th>7, 000.00</th>\n          </tr>\n          <tr>\n            <td>2/5/2020</td>\n            <td>payment</td>\n            <th>75000.00</th>\n            <td>2/5/2020</td>\n            <td>fertilizer</td>\n            <th>20, 000.00</th>\n          </tr>\n          <tr>\n            <td>2/5/2020</td>\n            <td>payment</td>\n            <th>75000.00</th>\n            <td>2/5/2020</td>\n            <td>pesticide</td>\n            <th>20, 000.00</th>\n          </tr>\n          <tr>\n            <td>2/5/2020</td>\n            <td>payment</td>\n            <th>75000.00</th>\n            <td>2/5/2020</td>\n            <td>pesticide</td>\n            <th>20, 000.00</th>\n          </tr>\n          <tr>\n            <td>2/5/2020</td>\n            <td>payment</td>\n            <th>80000.00</th>\n            <td>2/5/2020</td>\n            <td>fertilizer</td>\n            <th>7, 000.00</th>\n          </tr>\n          <tr>\n            <td>2/5/2020</td>\n            <td>payment</td>\n            <th>75000.00</th>\n            <td>2/5/2020</td>\n            <td>pesticide</td>\n            <th>20, 000.00</th>\n          </tr>\n          <tr>\n            <td>2/5/2020</td>\n            <td>payment</td>\n            <th>75000.00</th>\n            <td>2/5/2020</td>\n            <td>pesticide</td>\n            <th>20, 000.00</th>\n          </tr>\n\n          <tr>\n            <td colSpan='2'>Debit total(ksh)</td>\n            <th>2,000,000.00</th>\n            <td colSpan='2'>Deductions total(ksh)</td>\n            <th>430,000.00</th>\n          </tr>\n          <tr>\n            <td colSpan='3'>acount balance (2,000,000.00 - 430,000 ksh)</td>\n            <th colSpan='3'>1,570,000</th>\n          </tr>\n        </tbody>\n      </Table>\n    </React.Fragment>\n  );\n};\n\nexport default Accounts;\n","import React, { useState } from \"react\";\nimport Header from \"../common/Header\";\nimport \"../../assets/style.css\";\nimport Fields from \"./Fields\";\nimport Requests from \"./Requests\";\nimport Accounts from \"./Accounts\";\nimport Profile from \"./Profile\";\n\nconst FarmerDashBoard = () => {\n  // const [modalShow, setModalShow] = useState(false);\n  const [component, setComponent] = useState(1);\n  return (\n    <React.Fragment>\n      <Header />\n\n      <div className='container'>\n        <div className='row' id='mkulima'>\n          <div className='col-md-3 col-sm-12 px-0 '>\n            <div className='bgcolor-farmgreen profile '>\n              <nav className='primary-nav navbar-expand-md'>\n                <div className='site-title d-flex flex-column text-center text-light py-3'>\n                  <i class='fa fa-user-circle fa-10x' aria-hidden='true'></i>\n                  <a\n                    href='#'\n                    className='navbar-brand font-dm-sans-thick font-size-40'\n                  >\n                    Simiyu\n                  </a>\n                  <p className='description font-dm-sans'>Sikhendu Outgrower</p>\n                </div>\n                <div className='d-flex flex-column '>\n                  {/* <a\n                    href='#profile'\n                    onClick={() => setComponent(0)}\n                    className={\n                      component == 0\n                        ? \"nav-item dash-link-active  text-black-50 font-dm-sans font-size-16 active\"\n                        : \"nav-item dash-link text-black-50 font-dm-sans font-size-16 active\"\n                    }\n                    // className='nav-item dash-link text-black-50 font-dm-sans font-size-16 active'\n                  >\n                    Profile\n                  </a> */}\n                  <a\n                    href='#fields'\n                    onClick={() => setComponent(1)}\n                    className={\n                      component == 1\n                        ? \"nav-item dash-link-active  text-black-50 font-dm-sans font-size-16 active\"\n                        : \"nav-item dash-link text-black-50 font-dm-sans font-size-16 active\"\n                    }\n                    // className='nav-item dash-link text-black-50 font-dm-sans font-size-16 active'\n                  >\n                    Fields\n                  </a>\n                  <a\n                    href='#requests'\n                    onClick={() => setComponent(2)}\n                    className={\n                      component == 2\n                        ? \"nav-item dash-link-active  text-black-50 font-dm-sans font-size-16 active\"\n                        : \"nav-item dash-link text-black-50 font-dm-sans font-size-16 active\"\n                    }\n                    // className='nav-item dash-link text-black-50 font-dm-sans font-size-16 active'\n                  >\n                    Requests\n                  </a>\n                  <a\n                    href='#acounts'\n                    onClick={() => setComponent(3)}\n                    className={\n                      component == 3\n                        ? \"nav-item dash-link-active  text-black-50 font-dm-sans font-size-16 active\"\n                        : \"nav-item dash-link text-black-50 font-dm-sans font-size-16 active\"\n                    }\n                    // className='nav-item dash-link text-black-50 font-dm-sans font-size-16 active'\n                  >\n                    Accounts\n                  </a>\n                </div>\n              </nav>\n            </div>\n          </div>\n          <div\n            className='col-md-9 col-sm-12   px-0'\n            style={{ backgroundColor: \"#dfecdf\" }}\n          >\n            {component == 0 ? (\n              <Profile />\n            ) : component == 1 ? (\n              <Fields />\n            ) : component == 2 ? (\n              <Requests />\n            ) : component == 3 ? (\n              <Accounts />\n            ) : (\n              <Fields />\n            )}\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default FarmerDashBoard;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n// import { Container } from \"react-bootstrap\";\nimport LandingPage from \"./landingpage/LandingPage\";\nimport FarmerDashBoard from \"./farmerDashboard/DashBoard\";\n\nconst App = () => {\n  const loggedin = localStorage.getItem(\"farmerpwd\");\n  console.log(loggedin);\n  return (\n    <Router>\n      <Switch>\n        {!loggedin && <Route path='/' component={LandingPage} exact />}\n        <Route path='/farmer/dashboard' component={FarmerDashBoard} />\n        {loggedin && <Redirect from='/' to='/farmer/dashboard' exact />}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}